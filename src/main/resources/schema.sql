-- Удаление таблиц, если они существуют
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS comments;

-- Создание таблицы пользователей
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL UNIQUE
);

-- Создание таблицы запросов
CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(512) NOT NULL,
    requestor BIGINT,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_requestor FOREIGN KEY (requestor) REFERENCES users(id) ON DELETE SET NULL
);

-- Создание таблицы предметов
CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(512) NOT NULL,
    available BOOLEAN NOT NULL,
    owner BIGINT,
    request BIGINT,
    CONSTRAINT fk_owner FOREIGN KEY (owner) REFERENCES users(id) ON DELETE SET NULL,
    CONSTRAINT fk_request FOREIGN KEY (request) REFERENCES requests(id) ON DELETE SET NULL
);

-- Создание таблицы бронирований
CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(10) NOT NULL,
    CONSTRAINT fk_item FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT fk_booker FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Создание таблицы комментариев
CREATE TABLE IF NOT EXISTS comments (
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text    VARCHAR(512) NOT NULL,
    item    BIGINT       NOT NULL,
    author  BIGINT       NOT NULL,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_item_comments FOREIGN KEY (id) REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT fk_author_comments FOREIGN KEY (id) REFERENCES users (id) ON DELETE CASCADE
);
